{{ $JVB_UDP_PORT := .Env.JVB_PORT |  default "10000" }}
{{ $JVB_TCP_PORT := .Env.JVB_TCP_PORT | default "4443" }}
{{ $JVB_TCP_MAPPED_PORT := .Env.JVB_TCP_MAPPED_PORT | default $JVB_TCP_PORT }}
{{ $JVB_TCP_HARVESTER_DISABLED := .Env.JVB_TCP_HARVESTER_DISABLED | default "false" | toBool }}
{{ $JVB_TCP_SSLTCP_ENABLED := .Env.JVB_TCP_SSLTCP_ENABLED | default "true" | toBool }}

{{ $PUBLIC_URL_DOMAIN := .Env.PUBLIC_URL | default "https://localhost:8443" | trimPrefix "https://" | trimSuffix "/" -}}
{{ $WS_DOMAIN := .Env.JVB_WS_DOMAIN | default $PUBLIC_URL_DOMAIN -}}
{{ $WS_SERVER_ID := .Env.JVB_WS_SERVER_ID | default .Env.LOCAL_ADDRESS -}}

{{ $JVB_OCTO_ENABLED := .Env.JVB_OCTO_ENABLED | default "false" | toBool }}
{{ $JVB_OCTO_BIND_ADDRESS := .Env.JVB_OCTO_BIND_ADDRESS | default .Env.LOCAL_ADDRESS }}
{{ $JVB_OCTO_PUBLIC_ADDRESS := .Env.JVB_OCTO_PUBLIC_ADDRESS | default .Env.DOCKER_HOST_ADDRESS }}
{{ $JVB_OCTO_BIND_PORT := .Env.JVB_OCTO_BIND_PORT | default 4096 }}
{{ $JVB_OCTO_REGION := .Env.JVB_OCTO_REGION | default "region1" }}

videobridge {
    ice {
        udp {
            port = {{ $JVB_UDP_PORT }}
        }
        tcp {
            enabled = {{ not $JVB_TCP_HARVESTER_DISABLED }}
            port = {{ $JVB_TCP_PORT }}
{{ if not (eq $JVB_TCP_PORT $JVB_TCP_MAPPED_PORT) }}
            mapped-port = {{ $JVB_TCP_MAPPED_PORT }}
{{ end }}
            # Whether to use "ssltcp" or plain "tcp".
            ssltcp = {{ $JVB_TCP_SSLTCP_ENABLED }}
        }
    }
    apis {
        xmpp-client {
            configs {
                shard {
                    HOSTNAME = "{{ .Env.XMPP_SERVER }}"
                    DOMAIN = "{{ .Env.XMPP_AUTH_DOMAIN }}"
                    USERNAME = "{{ .Env.JVB_AUTH_USER }}"
                    PASSWORD = "{{ .Env.JVB_AUTH_PASSWORD }}"
                    MUC_JIDS = "{{ .Env.JVB_BREWERY_MUC }}@{{ .Env.XMPP_INTERNAL_MUC_DOMAIN }}"
                    MUC_NICKNAME = "{{ .Env.HOSTNAME }}"
                    DISABLE_CERTIFICATE_VERIFICATION = true
                }
            }
        }
    }
    stats {
        enabled = true
    }
    websockets {
        enabled = true
        domain = "{{ $WS_DOMAIN }}"
        tls = true
        server-id = "{{ $WS_SERVER_ID }}"
    }
    http-servers {
        private { 
          host = 0.0.0.0
        }
        public {
            host = 0.0.0.0
            port = 9090
        }
    }
    octo {
        # Whether or not Octo is enabled
        enabled={{ $JVB_OCTO_ENABLED }}

        # A string denoting the 'region' of this JVB.  This region
        # will be used by Jicofo in the selection of a bridge for
        # a client by comparing it to the client's region.
        # Must be set when 'enabled' is true
        region="{{ $JVB_OCTO_REGION }}"

        # The address on which the Octo relay should bind
        # Must be set when 'enabled' is true
        {{ if $JVB_OCTO_ENABLED }}
        bind-address={{ $JVB_OCTO_BIND_ADDRESS }}
        {{ end }}

        # The port to which the Octo relay should bind
        bind-port={{ $JVB_OCTO_BIND_PORT }}

        # The address which controls the public address which
        # will be part of the Octo relayId
        public-address={{ $JVB_OCTO_PUBLIC_ADDRESS }}

        # The size of the incoming octo queue. This queue is per-remote-endpoint,
        # so it matches what we use for local endpoints
        recv-queue-size=1024

        # The size of the outgoing octo queue.  This is a per-originating-endpoint
        # queue, so assuming all packets are routed (as they currently are for Octo)
        # it should be the same size as the transceiver recv queue in
        # jitsi-media-transform.  Repeating the description from there:
        #   Assuming 300pps for high-definition, 200pps for standard-definition,
        #   100pps for low-definition and 50pps for audio, this queue is fed
        #   650pps, so its size in terms of millis is 1024/650*1000 ~= 1575ms.
        send-queue-size=1024
      }
}

ice4j {
    harvest {
        mapping {
            stun {
{{ if .Env.JVB_STUN_SERVERS }}
                addresses = [ "{{ join "\",\"" (splitList "," .Env.JVB_STUN_SERVERS) }}" ]
{{ end }}
            }
        }
    }
}
